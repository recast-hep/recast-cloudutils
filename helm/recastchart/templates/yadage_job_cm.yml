apiVersion: v1
kind: ConfigMap
metadata:
  name: yadage-job-template
data:
  int_template: |
    apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      labels:
        app: null
      name: null
    spec:
      template:
        metadata:
          labels:
            app: null
        spec:
          containers:
          - command:
            - sh
            - -c
            - >-
              mkdir -p ~/.ssh && cp ~/ssh_data/id_rsa ~/.ssh/id_rsa &&
              chmod 0400 ~/.ssh/id_rsa &&
              wflow-process-server setupFromURL generic_onsuccess cleanup {wflowid}
              --stream-logs
            env:
            - name: WFLOW_DOWNLOAD_TOKEN
              valueFrom:
                secretKeyRef:
                  key: bearer_token
                  name: yadagewebuiauth
            - name: WFLOW_SERVER
              value: http://wflow-server.default.svc.cluster.local
            - name: WFLOW_DOWNLOAD_VERIFY_SSL
              value: "false"
            - name: WFLOW_BACKEND_REDIS_URL
              value: redis://backend-msg-queue.default.svc.cluster.local:6379/0
            - name: WFLOW_QUARANTINE_DIR
              value: /srv/workerdata/quarantine
            image: recast/yadage-worker:{{.Values.ImageTags.worker}}
            imagePullPolicy: {{.Values.ImagePullPolicy }}
            name: backend-server
            ports:
            - containerPort: 5000
              name: http
              protocol: TCP
            readinessProbe:
              initialDelaySeconds: 5
              periodSeconds: 5
              httpGet:
                path: /readyz
                port: 5000
            resources: {}
            volumeMounts:
            - mountPath: /root/ssh_data
              name: ssh
            - mountPath: /srv/workerdata
              name: data
              subPath: workerdata
            workingDir: /srv/workerdata
          - command: [wflow-yadage-server]
            env:
            - name: PACKTIVITY_CELERY_REDIS_BROKER
              value: redis://backend-msg-queue.default.svc.cluster.local:6379/1
            image: recast/yadage-worker:{{.Values.ImageTags.worker}}
            imagePullPolicy: {{.Values.ImagePullPolicy }}
            name: engine-server
            ports:
            - containerPort: 8888
              name: http
              protocol: TCP
            readinessProbe:
              initialDelaySeconds: 5
              periodSeconds: 5
              httpGet:
                path: /readyz
                port: 8888
            resources: {}
            volumeMounts:
            - mountPath: /srv/workerdata
              name: data
              subPath: workerdata
            workingDir: /srv/workerdata
          volumes:
          - name: ssh
            secret:
              secretName: control-center-ssh
          - name: data
            persistentVolumeClaim:
              claimName: worker-data
    ---
    apiVersion: v1
    kind: Service
    metadata:
      name: null
    spec:
      type: NodePort
      ports:
      - port: 8080
        name: service
        targetPort: 5000
        protocol: TCP
      - port: 80
        name: engine
        targetPort: 8888
        protocol: TCP
      selector:
        app: null
  job_template: |
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: null
    spec:
      backoffLimit: 0
      template:
        metadata:
          name: null
        spec:
          restartPolicy: Never
          containers:
          - name: worker
            command:
            - sh
            - '-c'
            - >-
              mkdir -p ~/.ssh &&
              cp ~/ssh_data/id_rsa ~/.ssh/id_rsa &&
              chmod 0400 ~/.ssh/id_rsa &&
              wflow-process setupFromURL generic_onsuccess cleanup --stream-logs --config-from-server {wflowid}
            image: recast/yadage-worker:{{.Values.ImageTags.worker}}
            imagePullPolicy: {{.Values.ImagePullPolicy }}
            workingDir: /srv/workerdata
            volumeMounts:
              - name: ssh
                mountPath: /root/ssh_data
              - name: data
                mountPath: /srv/workerdata
                subPath: workerdata
              {{ if eq .Values.HostOverlays true}}
              - name: localoverlaycode
                mountPath: /yadage_plugin
              {{ end }}
            {{ if eq .Values.ResourceRequirements true}}
            resources:
              requests:
                cpu: "0.5"  #will only fit one per 8VCPU node, but don't want to completely stuff it
                memory: "0.2Gi" #2GB memory per core
            {{ end }}
            env:
              - name: WFLOW_DOWNLOAD_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: yadagewebuiauth
                    key: bearer_token
              - name: WFLOW_SERVER
                value: http://wflow-server.default.svc.cluster.local
              - name: WFLOW_DOWNLOAD_VERIFY_SSL
                value: 'false'
              - name: WFLOW_BACKEND_REDIS_URL
                value: redis://backend-msg-queue.default.svc.cluster.local:6379/0
              - name: WFLOW_YADAGEBACKEND
                value: celery
              - name: WFLOW_QUARANTINE_DIR
                value: /srv/workerdata/quarantine
              - name: PACKTIVITY_CELERY_DISABLE_SYNC
                value: 'false'
              - name: PACKTIVITY_CELERY_REDIS_BROKER
                value: 'redis://backend-msg-queue.default.svc.cluster.local:6379/1'
              - name: YADAGE_SCHEMA_LOAD_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: yadageloadtoken
                    key: token
          volumes:
          {{ if eq .Values.HostOverlays true}}
          - name: localoverlaycode
            hostPath:
              path: {{ .Values.LocalOverlays.YadageWorkerCode }}
          {{end}}
          - name: ssh
            secret:
              secretName: control-center-ssh
          - name: data
            persistentVolumeClaim:
              claimName: worker-data
